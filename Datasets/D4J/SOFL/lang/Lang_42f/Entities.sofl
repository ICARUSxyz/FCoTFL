module Entities
type
    writer: Writer,
    str: String,
    i: int,
    c: int,
    len: int,
    entityName: String

process escape(writer: Writer, str: String) result: Void
pre
    str ≠ null ∧ writer ≠ null
post
    ∀ i ∈ [0, str.length()-1] •
        let c = codePointAt(str, i) in
            if entityName(c) ≠ null then
                writer.write('&' + entityName(c) + ';')
            else if c ≥ 0x010000 ∧ i < str.length() - 1 then
                writer.write('&#' + c + ';') ∧ i ← i+1
            else if c > 0x7F then
                writer.write('&#' + c + ';')
            else
                writer.write(c)
Functional Scenario Form
(str ≠ null ∧ writer ≠ null) &&
∀ i ∈ [0, str.length()-1] •
    if entityName(codePointAt(str, i)) ≠ null then
        write corresponding HTML escape
    else if code point > 0x010000 and not last character then
        write as numeric escape and skip next index
    else if code point > 0x7F then
        write as numeric escape
    else
        write as-is
end_process

end_module
